name: Backend CI/CD pipeline

on:
  push:
    branches: [ main ]
    paths: [ backend/** ]
  pull_request:
    paths: [ backend/** ]
  workflow_dispatch:

jobs:

  naming:
    name: Naming convention check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Check branch naming convention
      uses: deepakputhraya/action-branch-name@master
      with:
        regex: '^(BUG|FEAT|CHORE|DOC|TASK)-\d+\/[a-zA-Z0-9_]+$'
        allowed_prefixes: 'BUG,FEAT,CHORE,DOC,TASK'
        ignore: main
        min_length: 5
        max_length: 100
    - name: Check commit message naming convention
      uses: gsactions/commit-message-checker@v1
      with:
        pattern: '^(BUG|FEAT|CHORE|DOC|TASK)-\d+:[a-zA-Z0-9_ ]+$'
        flags: 'gm'
        error: 'Commit message does not follow the naming convention'
        excludeDescription: 'true'
        excludeTitle: 'true'
        checkAllCommitMessages: 'false'

  linting:
    needs: naming
    name: Linting check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: '12'
    - name: Install Dependencies
      working-directory: ./backend
      run: npm ci
    - name: Linting Check
      working-directory: ./backend
      run: npx prettier --check .

  test:
    needs: linting
    name: Build and test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: '12'
    - name: Install Dependencies
      working-directory: ./backend
      run: npm ci
    - name: Build
      working-directory: ./backend
      run: npm run build
    - name: Test coverage
      working-directory: ./backend
      run: npm run coverage

  deploy:
    needs: test
    name: Deploy to Heroku
    runs-on: ubuntu-latest
    # if: github.event_name == 'push'
    steps:
    - uses: actions/checkout@v2
    - uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
      with:
        heroku_api_key: ${{secrets.HEROKU_API_KEY}}
        heroku_app_name: 'supreme-erp'
        heroku_email: ${{secrets.HEROKU_EMAIL}}
        appdir: 'backend'
        usedocker: true
        docker_heroku_process_type: 'web'
        docker_build_args: |
          NODE_ENV
      env:
        NODE_ENV: production
