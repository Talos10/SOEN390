name: Frontend CI/CD pipeline

on:
  push:
    branches: [ main ]
    paths: [ frontend/** ]
  pull_request:
    paths: [ frontend/** ]
  workflow_dispatch:

jobs:

  naming:
    name: Naming convention check
    runs-on: ubuntu-latest
    if: github.event_name != 'workflow_dispatch'
    steps:
    - uses: actions/checkout@v2
    - name: Check branch naming convention
      uses: deepakputhraya/action-branch-name@master
      with:
        regex: '^(FIX|BUG|FEAT|CHORE|DOC|TASK)-\d+\/[a-zA-Z0-9_]+$'
        allowed_prefixes: 'BUG,FEAT,CHORE,DOC,TASK,FIX'
        ignore: main
        min_length: 5
        max_length: 100
    - name: Check commit message naming convention
      uses: gsactions/commit-message-checker@v1
      with:
        pattern: '^(FIX|BUG|FEAT|CHORE|DOC|TASK)-\d+:[a-zA-Z0-9_ ]+$'
        flags: 'gm'
        error: 'Commit message does not follow the naming convention'
        excludeDescription: True
        excludeTitle: True

  linting:
    needs: naming
    name: Linting check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: '12'
    - name: Install Dependencies
      working-directory: ./frontend
      run: npm ci
    - name: Linting Check
      working-directory: ./frontend
      run: npx prettier --check .

  test:
    needs: linting
    name: Build and test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: '12'
    - name: Install Dependencies
      working-directory: ./frontend
      run: npm ci
    - name: Build
      working-directory: ./frontend
      run: npm run build
    - name: Test
      working-directory: ./frontend
      run: npm test

  deploy:
    needs: test
    name: Deploy to Firebase
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    steps:
    - uses: actions/checkout@v2
    - run: npm ci && npm run build
      working-directory: ./frontend
    - uses: FirebaseExtended/action-hosting-deploy@v0
      with:
        repoToken: '${{ secrets.GITHUB_TOKEN }}'
        firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_SUPREME_ERP }}'
        channelId: live
        projectId: supreme-erp
        entryPoint: ./frontend
      env:
        FIREBASE_CLI_PREVIEWS: hostingchannels
